<?php//+Создать класс Fraction, который моделирует простую дробь с числителем и знаменателем.// +Определить методы конструктор, сокращения дроби и представления дроби в десятичном виде.//+Определить статические методы для арифметических операций с двумя дробями.class Fraction{    public $a;    public $b;    public function __construct($a, $b)    {        $this->a = (float)$a;        $this->b = (float)$b;        if ($this->b != 0)        {            $res = $this->a / $this->b;            echo $a."/".$b." = " . number_format($res, 2) . '<br/>';            //   echo'результат деления : ' . $this->a / $this->b . '<br/>'; - так не округляет до 2 после запятой        }        else echo "Devision on zero is forbidden!".'<br/>';    }    //the sum of two fractions    public static function sumfract ($c, $d, $i, $f)    {        $sumfr = $c / $d + $i / $f;        echo $c."/".$d." + ". $i."/".$f." = ". number_format($sumfr,2,',', '').'<br/>';    }    //Subtract two fractions    public static function subfract ($c, $d, $i, $f)    {        $subfr = $c / $d - $i / $f;        echo $c."/".$d." - ". $i."/".$f." = ". number_format($subfr,2,',', '').'<br/>';}    //divide two fractions    public static function devfract ($c, $d, $i, $f)    {        $df = ($c / $d) / ($i / $f);        echo $c."/".$d." / ". $i."/".$f." = ". number_format($df,2,',', '').'<br/>';    }    //multiplication of two fractions    public static function multfract ($c, $d, $i, $f)    {        $mf = ($c / $d) * ($i / $f);        echo $c."/".$d." * ". $i."/".$f." = ". number_format($mf,2,',', '').'<br/>';    }}$ttt = new Fraction(55, 0);Fraction::sumfract(23456, 8, 56788, 167);Fraction::subfract(1,2,4,10);Fraction::devfract(1,2,5,500);Fraction::multfract(30,5,3,2);